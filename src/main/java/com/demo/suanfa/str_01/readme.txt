1,给出一个字符串S,我们要去找到一个substring子字符串，
这个子串不包含重复字符，并且是最长的
solution1:
使用两层循环的方式固定i，然后j=i+1开始往右扫描判断是可以的，但是复杂度是O(N^2)

solution2:
使用滑动窗口的方法，维护两个指针L和R，分别指向窗口的左右边界，复杂度是O(N)

1.初始化L=R=0,最左开始扫描

2.定义一个哈希表，借助额外空间来存储滑动窗口中的字符，和对应的下标

3.循环扫描，R开始右移。循环退出条件是：R到s末尾并且L<=R

4.If 当前字符在哈希表中不存在，则说明是新字符，假如哈希表并不存在，右移R进入下次循环，
或者当前出现的字符已经在滑动窗口的左边界外，则更新当前的字符index;
----比如 s="abba"; R是移到第二个b的时候，L移到第一个b

Else, 说明找到滑动窗口中已经存在一个字符和当前字符相同。 这时我们需要计算当前的substring长度并对比Max len赋值,同时 L移动到当前出口中重复字符的下一个位置作为新的左边界，然后更新字符的index位R。

R++，进入下一次循环

5。最后R可能扫描到了末尾都没有重复字符，所以我们需要在循环结束后重新计算下最长子串长度，然后 return.